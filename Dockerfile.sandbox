# Sandbox gRPC Server Dockerfile
FROM golang:1.24.5-bookworm AS builder

# 安裝CMake和其他依賴
RUN apt-get update && apt-get install -y \
    cmake \
    ninja-build \
    g++ \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# 複製go.mod和go.sum
COPY go.mod go.sum ./
RUN go mod download

# 複製源代碼
COPY . .

# 編譯sandbox服務器
RUN go build -o sandbox-server ./cmd/sandbox-server

# build grp_parser
RUN cd ./sandbox/grp_parser && \
    rm -rf CMakeCache.txt CMakeFiles cmake_install.cmake _deps Makefile && \
    cmake -G "Ninja" . && \
    cmake --build . 

FROM debian:bookworm-slim

# 更新套件列表並安裝必要依賴
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    make \
    gcc \
    g++ \
    cmake \
    ninja-build \
    libgtest-dev \
    valgrind \
    && rm -rf /var/lib/apt/lists/*

# 創建 keyring 目錄並安裝 isolate 公鑰
RUN mkdir -p /etc/apt/keyrings && \
    curl https://www.ucw.cz/isolate/debian/signing-key.asc > /etc/apt/keyrings/isolate.asc

# 添加 isolate 套件源
RUN echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/isolate.asc] http://www.ucw.cz/isolate/debian/ bookworm-isolate main" >> /etc/apt/sources.list

# 安裝 isolate
RUN apt-get update && apt-get install -y isolate && rm -rf /var/lib/apt/lists/*

# 創建isolate所需的目錄
RUN mkdir -p /var/local/lib/isolate

RUN mkdir -p /sandbox /sandbox/code /sandbox/repo && \
    chmod 777 /sandbox /sandbox/code /sandbox/repo

WORKDIR /app

# 複製編譯的二進制文件
COPY --from=builder /app/sandbox-server .

# 複製sandbox相關文件
COPY --from=builder /app/.env.local /app/.env.local
COPY --from=builder /app/sandbox/grp_parser/grp_parser ./sandbox/grp_parser/grp_parser

# 暴露gRPC端口
EXPOSE 50051

# 運行sandbox服務器
CMD ["./sandbox-server"]
